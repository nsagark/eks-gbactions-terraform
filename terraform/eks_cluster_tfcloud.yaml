name: Setup and configure AWS Cluster for ATOS

on:
  push:
    branches:
      - main
      - vra-dev-test

# Global environment variables that are accessable to all jobs
env:
  ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  REGION: us-east-1
  NIRMATA_KEY: ${{ secrets.NIRMATA_TOKEN }}

jobs:
  setup-infastructure:
    name: Building Infastruture
    runs-on: ubuntu-latest

    env: 
      WORKSPACE_NAME: "vra-dev-test"
      PROJECT_NAME: "vra-dev-test"
      VPC_NAME: "vra-dev-test-vpc"
      SUBNET_NAME: "vra-dev-test-subnet"
      SUBNET_AZS: "[\"us-east-1a\", \"us-east-1b\"]"
      IG_NAME: "vra-dev-test-ig"
      RT_NAME: "vra-dev-test-rt"
      CLUSTER_RN: "vra-dev-test-cluster-rn"
      CLUSTER_NAME: "vra-dev-test-cluster"
      NG_ROLE_NAME: "vra-dev-test-ng-role"

    steps:

    - name: Check out source code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        # terraform_version: 0.13.0
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    - name: Initialize and plan terraform
      run: |
        terraform --version
        cd terraform
        sed -i -e "s/WORKSPACE_NAME/$WORKSPACE_NAME/" provider.tf
        terraform init
        terraform validate -no-color
  
    - name: Terraform Plan
      run: |
        cd terraform
        {
          echo nirmata_token=\"$NIRMATA_KEY\"
          echo project_name=\"$PROJECT_NAME\"
          echo access_key=\"$ACCESS_KEY\"
          echo secret_key=\"$SECRET_KEY\"
          echo region=\"$REGION\"
          echo vpc_name=\"$VPC_NAME\"
          echo subnet_name=\"$SUBNET_NAME\"
          echo subnet_azs=$SUBNET_AZS
          echo ig_name=\"$IG_NAME\"
          echo rt_name=\"$RT_NAME\"
          echo cluster_name=\"$CLUSTER_NAME\"
          echo cluster_rn=\"$CLUSTER_RN\"
          echo ng_role_name=\"$NG_ROLE_NAME\"
        } > terraform.auto.tfvars
        cat terraform.auto.tfvars
        terraform plan

    - name: Apply the terraform plan
      run: |
        cd terraform
        terraform apply -auto-approve
